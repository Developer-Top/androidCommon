apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    api 'com.belerweb:pinyin4j:2.5.1'
    implementation 'androidx.exifinterface:exifinterface:1.1.0-rc01'
}
task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}
publishing {
    publications {
        aar(MavenPublication) {
            //记住一下规则,等会导入时注意, 举例compile 'com.newing.mvp:debug:1.0.0'
            groupId 'com.newing.utils'//包名
            artifactId 'debug'
            version '1.0.0'//版本
            // Tell maven to prepare the generated "*.aar" file for publishing
            artifact(sourceJar)
            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            //同时记录该依赖库所依赖的其他远程依赖
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.api.allDependencies.each {
                    if (it.group != null && (it.name != null || "unspecified".equals(it.name)) && it.version != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
    repositories {
        maven {
            //仓库存放在项目根目录
//            url("file://" + project.rootDir.absolutePath + "/repository")
            url("http://192.168.11.70:8081/repository/maven-releases/")
            //认证用户和密码
            credentials {
                username 'admin'
                password '123456'
            }
        }
    }
}
